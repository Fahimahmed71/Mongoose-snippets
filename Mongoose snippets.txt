{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  // mongoose router
  "Mongoose Router": {
    "scope": "javascript,typescript",
    "prefix": "montest",
    "body": [
      "const express = require('express')",
      "const router = express.Router()",
      "",
      "router.get('/', async (req, res) => {",
      "res.send('Server is running')",
      "})",
      "",
      "module.exports = router"
    ],
    "description": "Mongoose Router"
  },
  // mongoose scema
  "Mongoose Scema": {
    "scope": "javascript,typescript",
    "prefix": "monschema",
    "body": [
      "const mongoose = require('mongoose');",
      "",
      "const schemaName = new mongoose.Schema({",
      "});",
      "",
      "module.exports = mongoose.model('schemaName',ExportSchemaName);"
    ],
    "description": "Mongoose Scema"
  },
  // mongoose route
  "Mongoose Route": {
    "scope": "javascript,typescript",
    "prefix": "monroute",
    "body": [
      "const express = require('express');",
      "const router = express.Router();",
      "const controllerName = require(controllerLocation);",
      "",
      "router.CRUD('/', controllerName)",
      "",
      "",
      "module.exports = router;"
    ],
    "description": "Mongoose Route"
  },
  // mongoose controller
  "Mongoose Controller": {
    "scope": "javascript,typescript",
    "prefix": "moncontrol",
    "body": [
      "const SchemaName = require('SchemaRoute');",
      "",
      "const controllername = async (req, res) => {",
      "try {",
      "} catch (err) {",
      "// error testing",
      "",
      "console.log(err);",
      "res.status(500).json({ error: error.message });",
      "}",
      "}",
      "",
      "module.exports = controllername;"
    ]
  },
  //   node index
  "Node Index": {
    "scope": "javascript,typescript",
    "prefix": "!node",
    "body": [
      "const express = require('express');",
      "const cors = require('cors');",
      "const mongoose = require('mongoose');",
      "",
      "require('dotenv').config();",
      "",
      "const app = express();",
      "",
      "const mongoURI = 'mongodb://localhost:27017/yourDatabaseName'",
      "",
      "app.use(cors());",
      "app.use(express.json());",
      "const port = process.env.PORT || 5000;",
      "mongoose.set('strictQuery', false);",
      "",
      "mongoose.connect(mongoURI).then(() => console.log('Connected to MongoDB')).catch((err) => console.error('Error connecting to MongoDB:', err))",
      "",
      "const indexRouter = require('./routes/router');",
      "",
      "app.use('/', indexRouter);",
      "",
      "app.listen(port);"
    ],
    "description": "Node Index"
  }
}